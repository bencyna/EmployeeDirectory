{"version":3,"sources":["components/navbar/index.js","components/Container/index.js","utils/API.js","components/searchForm.js/index.js","components/searchResults/index.js","components/search.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Container","props","style","children","axios","get","SearchForm","searchingFor","results","filter","employee","name","first","toLowerCase","search","htmlFor","value","onChange","handleInputChange","list","type","placeholder","id","map","onClick","handleFormSubmit","SearchResults","includes","handleSortFunction","result","alt","src","picture","thumbnail","last","dob","age","date","email","location","city","postcode","login","uuid","Search","state","error","sort","event","setState","target","orderResults","i","length","push","test_with_index","left","right","reverse","indexes","j","output","API","then","res","data","catch","err","console","log","this","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb0e2b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Employees\r\n      </Link>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className=\"container\" style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import axios from \"axios\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getEmployees: function () {\r\n    return axios.get(\"https://randomuser.me/api/?results=1000\");\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n// Using the datalist element we can create autofill suggestions based on the props.names array\r\nfunction SearchForm(props) {\r\n  const searchingFor = props.results.filter(\r\n    (employee) =>\r\n      employee.name.first.toLowerCase() === props.search.toLowerCase()\r\n  );\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"form-group searchBar\">\r\n        <label htmlFor=\"employee\">Employee:</label>\r\n        <input\r\n          value={props.search}\r\n          onChange={props.handleInputChange}\r\n          employee=\"employee\"\r\n          list=\"employees\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Look for an employee\"\r\n          id=\"employee\"\r\n        />\r\n        <datalist id=\"employees\">\r\n          {searchingFor.map((employee) => (\r\n            <div key={employee.name.first}>\r\n              hi\r\n              <option value={employee} key={employee} />\r\n            </div>\r\n          ))}\r\n        </datalist>\r\n        <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from \"react\";\r\n\r\nfunction SearchResults(props) {\r\n  const searchingFor = props.results.filter((employee) =>\r\n    employee.name.first.includes(props.search)\r\n  );\r\n  return (\r\n    <div className=\"employee container\">\r\n      <header className=\"headings row\">\r\n        <button className=\"name btn btn-light name col-sm-2\"></button>\r\n        <button\r\n          onClick={props.handleSortFunction}\r\n          className=\"age btn btn-light name col-sm-2\"\r\n        >\r\n          Name\r\n        </button>\r\n        <button className=\"gender btn btn-light name col-sm-2\">Age</button>\r\n        <button className=\"email btn btn-light name col-sm-3\">Email</button>\r\n        <button className=\"location btn btn-light name col-sm-3\">\r\n          Location\r\n        </button>\r\n      </header>\r\n      {searchingFor.map((result) => (\r\n        <div className=\"row\" key={result.login.uuid}>\r\n          <div\r\n            className=\"picture col-sm-2 list-group-item list-group-item-action\"\r\n            key={result.picture.thumbnail}\r\n          >\r\n            <img alt=\"employee\" src={result.picture.thumbnail} />\r\n          </div>\r\n          <div\r\n            className=\"name col-sm-2 list-group-item list-group-item-action\"\r\n            key={result.name.first + result.name.last}\r\n          >\r\n            {result.name.first} {result.name.last}\r\n          </div>\r\n          <div\r\n            className=\"age col-sm-2 list-group-item list-group-item-action\"\r\n            key={result.dob.date}\r\n          >\r\n            {result.dob.age}\r\n          </div>\r\n\r\n          <div\r\n            className=\"email col-sm-3 list-group-item list-group-item-action\"\r\n            key={result.email}\r\n          >\r\n            {result.email}\r\n          </div>\r\n          <div\r\n            className=\"location col-sm-3 list-group-item list-group-item-action\"\r\n            key={result.location.city + result.location.postcode}\r\n          >\r\n            {result.location.city}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"./Container\";\r\nimport API from \"../utils/API\";\r\nimport SearchForm from \"./searchForm.js\";\r\nimport SearchResults from \"./searchResults\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: [],\r\n    error: \"\",\r\n    sort: \"desc\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    API.getEmployees()\r\n      .then((res) => {\r\n        this.setState({ results: res.data.results });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  handleSortFunction = (event) => {\r\n    let orderResults = [];\r\n    for (let i = 0; i < this.state.results.length; i++) {\r\n      orderResults.push(this.state.results[i].name.first);\r\n    }\r\n\r\n    const test_with_index = [];\r\n    for (let i in orderResults) {\r\n      test_with_index.push([orderResults[i], i]);\r\n    }\r\n    if (this.state.sort == \"desc\") {\r\n      this.setState({ sort: \"asc\" });\r\n      test_with_index.sort(function (left, right) {\r\n        return left[0] < right[0] ? -1 : 1;\r\n      });\r\n    } else {\r\n      this.setState({ sort: \"desc\" });\r\n      test_with_index.reverse(function (left, right) {\r\n        return left[0] < right[0] ? -1 : 1;\r\n      });\r\n    }\r\n    let indexes = [];\r\n    orderResults = [];\r\n    for (let j in test_with_index) {\r\n      orderResults.push(test_with_index[j][0]);\r\n      indexes.push(test_with_index[j][1]);\r\n    }\r\n\r\n    const output = indexes.map((i) => this.state.results[i]);\r\n\r\n    this.setState({ results: output });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <SearchForm\r\n            handleInputChange={this.handleInputChange}\r\n            results={this.state.results}\r\n            search={this.state.search}\r\n          />\r\n          <SearchResults\r\n            results={this.state.results}\r\n            search={this.state.search}\r\n            sort={this.state.sort}\r\n            handleSortFunction={this.handleSortFunction}\r\n          />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport Navbar from \"./components/navbar\";\nimport Search from \"./components/search\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Search />;\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}